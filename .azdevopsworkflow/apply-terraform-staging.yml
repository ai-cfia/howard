trigger:
  branches:
    include:
      - main

pr: none

pool:
  name: "Azure_CFIA_Agents_for_IAAS"
  demands:
    - Agent.Name -equals Agent1_C004

variables:
  - group: terraform-backend-settings

stages:
  - stage: InitAndPlan
    displayName: "Initialize and Plan"
    jobs:
      - job: TerraformInitPlan
        displayName: "Terraform Init and Plan"
        steps:
          - task: UseDotNet@2
            displayName: "Install .NET (required for Terraform)"
            inputs:
              packageType: sdk
              version: 7.x

          - powershell: |
              Write-Host "Fetching agent IP address..."
              ipconfig | findstr "IPv4 Address"
            displayName: "Get Agent IP"

          - powershell: |
              Write-Host "Installing Azure CLI on Windows..."
              Invoke-WebRequest -Uri https://aka.ms/installazurecliwindows -OutFile AzureCLI.msi
              Start-Process msiexec.exe -ArgumentList '/I AzureCLI.msi /quiet' -Wait
              az version
            displayName: "Install Azure CLI"

          - powershell: |
              Write-Host "Logging into Azure CLI..."
              az login --service-principal `
                -u "$env:servicePrincipalId" `
                -p "$env:servicePrincipalKey" `
                --tenant "$env:tenantId"
              Write-Host "Successfully logged in to Azure CLI"
            displayName: "Azure CLI Login"

          - powershell: |
              Write-Host "Fetching AKS Credentials..."
              az aks get-credentials `
                --name "$env:aks_name" `
                --resource-group "$env:aks_resource_group" `
                --admin `
                --file "$HOME\.kube\config"
              Write-Host "AKS credentials configured for kubectl"
            displayName: "Get AKS Credentials"

          - task: DownloadSecureFile@1
            name: DownloadSecureVars
            displayName: "Download staging.tfvars"
            inputs:
              secureFile: "staging.tfvars"

          - task: TerraformTaskV2@2
            displayName: Terra Init
            inputs:
              provider: "azurerm"
              command: "init"
              workingDirectory: "$(System.DefaultWorkingDirectory)/terraform/staging"
              backendServiceArm: "$(serviceConnectionName)"
              backendAzureRmResourceGroupName: "$(resourceGroupName)"
              backendAzureRmStorageAccountName: "$(storageAccountName)"
              backendAzureRmContainerName: "$(containerName)"
              backendAzureRmKey: "$(stateKey)"

          - task: TerraformTaskV2@2
            displayName: Terra Plan
            inputs:
              provider: "azurerm"
              command: "plan"
              commandOptions: "-var-file=$(DownloadSecureVars.SecureFilePath)"
              workingDirectory: "$(System.DefaultWorkingDirectory)/terraform/staging"
              environmentServiceNameAzureRM: "$(serviceConnectionName)"

  - stage: Apply
    displayName: "Apply Terraform Plan"
    dependsOn: InitAndPlan
    condition: succeeded()
    jobs:
      - deployment: TerraformApply
        displayName: "Terraform Apply"
        pool:
          name: "Azure_CFIA_Agents_for_IAAS"
          demands:
            - Agent.Name -equals Agent1_C004
        environment: "TFApproval"
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self

                - powershell: |
                    Write-Host "Installing Azure CLI on Windows..."
                    Invoke-WebRequest -Uri https://aka.ms/installazurecliwindows -OutFile AzureCLI.msi
                    Start-Process msiexec.exe -ArgumentList '/I AzureCLI.msi /quiet' -Wait
                    az version
                  displayName: "Install Azure CLI"

                - powershell: |
                    Write-Host "Logging into Azure CLI..."
                    az login --service-principal `
                      -u "$env:servicePrincipalId" `
                      -p "$env:servicePrincipalKey" `
                      --tenant "$env:tenantId"
                    Write-Host "Successfully logged in to Azure CLI"
                  displayName: "Azure CLI Login"

                - powershell: |
                    Write-Host "Fetching AKS Credentials..."
                    az aks get-credentials `
                      --name "$env:aks_name" `
                      --resource-group "$env:aks_resource_group" `
                      --admin `
                      --file "$HOME\.kube\config"
                    Write-Host "AKS credentials configured for kubectl"
                  displayName: "Get AKS Credentials"

                - task: DownloadSecureFile@1
                  name: DownloadSecureVars
                  displayName: "Download staging.tfvars"
                  inputs:
                    secureFile: "staging.tfvars"

                - task: TerraformTaskV2@2
                  displayName: Terra Init
                  inputs:
                    provider: "azurerm"
                    command: "init"
                    workingDirectory: "$(System.DefaultWorkingDirectory)/terraform/staging"
                    backendServiceArm: "$(serviceConnectionName)"
                    backendAzureRmResourceGroupName: "$(resourceGroupName)"
                    backendAzureRmStorageAccountName: "$(storageAccountName)"
                    backendAzureRmContainerName: "$(containerName)"
                    backendAzureRmKey: "$(stateKey)"

                - task: TerraformTaskV2@2
                  displayName: Terra Apply
                  inputs:
                    provider: "azurerm"
                    command: "apply"
                    commandOptions: "-var-file=$(DownloadSecureVars.SecureFilePath)"
                    workingDirectory: "$(System.DefaultWorkingDirectory)/terraform/staging"
                    environmentServiceNameAzureRM: "$(serviceConnectionName)"
