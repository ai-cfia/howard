loki:
  schemaConfig:
    configs:
      - from: 2024-04-01
        store: tsdb
        object_store: s3
        schema: v13
        index:
          prefix: loki_index_
          period: 24h
  rulerConfig:
    storage:
      type: local
      local:
        directory: /var/loki/rules
    rule_path: /var/loki/rules/alertmanager
    alertmanager_url: http://kube-prometheus-stack-alertmanager:9093
    enable_alertmanager_v2: true
    external_labels:
      origin: loki
  sidecar:
    rules:
      searchNamespace: ALL
      folder: /var/loki/rules/alertmanager
  ingester:
    chunk_encoding: snappy
  tracing:
    enabled: true
  querier:
    # Default is 4, if you have enough memory and CPU you can increase, reduce if OOMing
    max_concurrent: 4
  auth_enabled: false

ruler:
  enabled: true
  replicas: 1
  persistence:
    enabled: true
    size: 5Gi
    storageClass: default
  directories:
    alertmanager:
      test-app-alert.yaml: |
        groups:
          - name: test_app_critical
            rules:
              - alert: CriticalLogDetected
                expr: count_over_time({application="test-app", severity="critical"}[1m]) > 0
                for: 1m
                labels:
                  severity: critical
                annotations:
                  summary: "Critical log found in test-app"
                  description: "Log entry with severity `critical` detected in test-app."

deploymentMode: Distributed # Microservices

ingester:
  replicas: 3
querier:
  replicas: 3
  maxUnavailable: 2
queryFrontend:
  replicas: 2
  maxUnavailable: 1
queryScheduler:
  replicas: 2
distributor:
  replicas: 3
  maxUnavailable: 2
compactor:
  replicas: 1
indexGateway:
  replicas: 2
  maxUnavailable: 1

bloomCompactor:
  replicas: 0
bloomGateway:
  replicas: 0

minio:
  enabled: true

backend:
  replicas: 0
read:
  replicas: 0
write:
  replicas: 0

singleBinary:
  replicas: 0
