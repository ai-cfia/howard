---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: finesse-backend
spec:
  replicas: 2
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: finesse-backend
  template:
    metadata:
      labels:
        app: finesse-backend
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 3000
        fsGroup: 2000
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - finesse-backend
              topologyKey: "kubernetes.io/hostname"
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/role
                    operator: In
                    values:
                      - agent
      containers:
        - name: finesse-backend
          image: ghcr.io/ai-cfia/finesse-backend:main
          imagePullPolicy: Always
          command: ["/bin/sh", "-c"]
          args:
            [
              gunicorn --bind :8080 --workers 1 --threads 8 --timeout 0 --forwarded-allow-ips "*" app:app,
            ]
          envFrom:
            - secretRef:
                name: finesse-secrets
          ports:
            - containerPort: 8080
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 10
          resources:
            requests:
              cpu: 200m
              memory: 750Mi
            limits:
              cpu: 400m
              memory: 2Gi
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: tmp
              mountPath: /tmp
      volumes:
        - name: tmp
---
apiVersion: v1
kind: Service
metadata:
  name: finesse-backend-svc
spec:
  clusterIP: None
  selector:
    app: finesse-backend
  ports:
    - protocol: TCP
      port: 8080
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: finesse-backend-pdb
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: finesse-backend
