apiVersion: apps/v1
kind: Deployment
metadata:
  name: fertiscan-backend
spec:
  replicas: 2
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: fertiscan-backend
  template:
    metadata:
      labels:
        app: fertiscan-backend
      annotations:
        instrumentation.opentelemetry.io/inject-python: "true"
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - fertiscan-backend
              topologyKey: "kubernetes.io/hostname"
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/role
                    operator: In
                    values:
                      - agent
      containers:
        - name: fertiscan-backend
          image: ghcr.io/ai-cfia/fertiscan-backend:185-as-a-devops-i-want-to-make-sure-auto-instrumentation-is-fully-functional
          imagePullPolicy: Always
          envFrom:
            - secretRef:
                name: fertiscan-backend-secrets
          env:
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: "http://alloy.monitoring.svc.cluster.local:4318"
            - name: OTEL_TRACES_EXPORTER
              value: "otlp"
            - name: OTEL_METRICS_EXPORTER
              value: "otlp"
            - name: OTEL_PYTHON_LOG_CORRELATION
              value: "true"
            - name: OTEL_TRACES_SAMPLER
              value: "always_on"
            - name: OTEL_TRACES_SAMPLER_ARG
              value: "1"
            - name: OTEL_LOGS_EXPORTER
              value: "otlp"
          ports:
            - containerPort: 5000
          volumeMounts:
            - name: logs
              mountPath: /app/logs
            - name: uploads
              mountPath: /app/uploads
            - name: tmp
              mountPath: /cachedir_joblib
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            runAsNonRoot: false
            readOnlyRootFilesystem: false
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
        - name: file-browser
          image: filebrowser/filebrowser
          ports:
            - containerPort: 80
              name: http
          volumeMounts:
            - name: logs
              mountPath: /srv/logs
            - name: uploads
              mountPath: /srv/uploads
            - name: filebrowser-db
              mountPath: /db
          command:
            - "/bin/sh"
            - "-c"
            - |
              [ ! -f /db/database.db ] && touch /db/database.db && /filebrowser config init --database=/db/database.db && \
              /filebrowser config set --auth.method=proxy --auth.header=X-Vouch-Token && \
              /filebrowser -r /srv -d /database.db
      volumes:
        - name: tmp
          emptyDir: {}
        - name: logs
          persistentVolumeClaim:
            claimName: fertiscan-logs-pvc
        - name: uploads
          persistentVolumeClaim:
            claimName: fertiscan-uploads-pvc
        - name: filebrowser-db
          persistentVolumeClaim:
            claimName: filebrowser-db-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: fertiscan-logs-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: fertiscan-uploads-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: filebrowser-db-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: fertiscan-backend-pdb
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: fertiscan-backend

---
apiVersion: v1
kind: Service
metadata:
  name: fertiscan-backend-svc
spec:
  clusterIP: None
  selector:
    app: fertiscan-backend
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000
      name: api
    - protocol: TCP
      port: 80
      targetPort: 80
      name: file-browser
