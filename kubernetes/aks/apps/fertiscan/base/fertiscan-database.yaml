---
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: fertiscan-pgsql-cluster
spec:
  description: "Fertiscan PostgreSQL cluster"
  imageName: ghcr.io/cloudnative-pg/postgresql:15.8
  instances: 3
  primaryUpdateStrategy: unsupervised

  bootstrap:
    initdb:
      database: fertiscan
      owner: app
      secret:
        name: fertiscan-pgsql-app-user

  superuserSecret:
    name: fertiscan-pgsql-superuser

  storage:
    storageClassName: default
    size: 20Gi

  # TODO: Configure backup
  # backup:
  #   barmanObjectStore:
  #     destinationPath: "<destination path here>"
  #     azureCredentials:
  #       connectionString:
  #         name: azure-creds
  #         key: AZURE_CONNECTION_STRING
  #       storageAccount:
  #         name: azure-creds
  #         key: AZURE_STORAGE_ACCOUNT
  #       storageKey:
  #         name: azure-creds
  #         key: AZURE_STORAGE_KEY
  #       storageSasToken:
  #         name: azure-creds
  #         key: AZURE_STORAGE_SAS_TOKEN
  #   retentionPolicy: "30d"

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: fertiscan-pgsql-ingress
  annotations:
    nginx.ingress.kubernetes.io/whitelist-source-range: 205.194.32.0/24,10.244.0.0/16,192.197.71.0/24
    external-dns.alpha.kubernetes.io/target: inspection.alpha.canada.ca
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/add-base-url: "true"
    nginx.ingress.kubernetes.io/client_max_body_size: "200m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "120"
    kubernetes.io/tls-acme: "true"
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - fertiscan-pgsql.inspection.alpha.canada.ca
      secretName: fertiscan-pgsql-tls
  rules:
    - host: fertiscan-pgsql.inspection.alpha.canada.ca
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: fertiscan-pgsql-cluster-rw
                port:
                  number: 5432
