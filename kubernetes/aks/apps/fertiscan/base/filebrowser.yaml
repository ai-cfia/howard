apiVersion: apps/v1
kind: Deployment
metadata:
  name: filebrowser
  labels:
    app: filebrowser
spec:
  replicas: 1
  selector:
    matchLabels:
      app: filebrowser
  template:
    metadata:
      labels:
        app: filebrowser
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app: fertiscan-backend
              topologyKey: "kubernetes.io/hostname"
      containers:
        - name: file-browser
          image: filebrowser/filebrowser
          ports:
            - containerPort: 80
              name: http
          volumeMounts:
            - name: logs
              mountPath: /srv/logs
              readOnly: true
            - name: uploads
              mountPath: /srv/uploads
              readOnly: true
            - name: filebrowser-db
              mountPath: /db
          command:
            - "/bin/sh"
            - "-c"
            - |
              /filebrowser config set --auth.method=proxy --auth.header=X-Vouch-Token && \
              /filebrowser -r /srv -d /db/database.db
      volumes:
        - name: logs
          persistentVolumeClaim:
            claimName: fertiscan-logs-pvc
        - name: uploads
          persistentVolumeClaim:
            claimName: fertiscan-uploads-pvc
        - name: filebrowser-db
          persistentVolumeClaim:
            claimName: filebrowser-db-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: filebrowser-db-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
apiVersion: v1
kind: Service
metadata:
  name: filebrowser-svc
spec:
  selector:
    app: filebrowser
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
      name: http
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: fertiscan-filebrowser-ingress
  annotations:
    nginx.ingress.kubernetes.io/whitelist-source-range: 205.194.32.0/24,10.244.0.0/16,192.197.71.0/24
    external-dns.alpha.kubernetes.io/target: inspection.alpha.canada.ca
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/add-base-url: "true"
    nginx.ingress.kubernetes.io/client_max_body_size: "200m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "120"
    kubernetes.io/tls-acme: "true"
    # Vouch Proxy Authentication
    nginx.ingress.kubernetes.io/auth-signin: "https://vouch.inspection.alpha.canada.ca/login?url=$scheme://$http_host$request_uri&vouch-failcount=$auth_resp_failcount&X-Vouch-Token=$auth_resp_jwt&error=$auth_resp_err"
    nginx.ingress.kubernetes.io/auth-url: https://vouch.inspection.alpha.canada.ca/validate
    nginx.ingress.kubernetes.io/auth-snippet: |
      auth_request_set $auth_resp_jwt $upstream_http_x_vouch_jwt;
      auth_request_set $auth_resp_err $upstream_http_x_vouch_err;
      auth_request_set $auth_resp_failcount $upstream_http_x_vouch_failcount;
    nginx.ingress.kubernetes.io/custom-http-errors: "403"
    nginx.ingress.kubernetes.io/default-backend: "default-nginx-backend"
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - filebrowser.inspection.alpha.canada.ca
      secretName: aciacfia-tls
  rules:
    - host: filebrowser.inspection.alpha.canada.ca
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: fertiscan-backend-svc
                port:
                  number: 80
