apiVersion: apps/v1
kind: Deployment
metadata:
  name: vectordb
spec:
  selector:
    matchLabels:
      app: vectordb
  replicas: 1
  revisionHistoryLimit: 3
  template:
    metadata:
      labels:
        app: vectordb
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/role
                    operator: In
                    values:
                      - agent
      containers:
        - name: vectordb
          image: ankane/pgvector:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 5432
          envFrom:
            - secretRef:
                name: vectordb-secrets
          volumeMounts:
            - name: storage
              mountPath: /var/lib/postgresql/data
              subPath: pgdata
      volumes:
        - name: storage
          persistentVolumeClaim:
            claimName: librechat-vectordb-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: librechat-vectordb-pvc
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "10Gi"
---
apiVersion: v1
kind: Service
metadata:
  name: vectordb
spec:
  type: ClusterIP
  selector:
    app: vectordb
  ports:
    - port: 5432
      name: http

---
kind: Secret
apiVersion: v1
metadata:
  name: vectordb-secrets
  annotations:
    avp.kubernetes.io/path: "kv/data/librechat/vectordb"
    avp.kubernetes.io/secret-version: "2"
stringData:
  POSTGRES_DB: <POSTGRES_DB>
  POSTGRES_USER: <POSTGRES_USER>
  POSTGRES_PASSWORD: <POSTGRES_PASSWORD>
  POSTGRES_PORT: "5432"
