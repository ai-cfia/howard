---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: secrets-reader
  namespace: finesse

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: finesse-backend
  namespace: finesse
spec:
  replicas: 2
  selector:
    matchLabels:
      app: finesse-backend
  template:
    metadata:
      labels:
        app: finesse-backend
      annotations:
        vault.hashicorp.com/agent-inject: 'true'
        vault.hashicorp.com/role: 'secrets-reader'
        vault.hashicorp.com/tls-skip-verify: 'true'
        vault.hashicorp.com/agent-inject-template-.env: |
          {{- with secret "apps/finesse" -}}
          AZURE_OPENAI_CHATGPT_DEPLOYMENT="{{ .Data.data.AZURE_OPENAI_CHATGPT_DEPLOYMENT }}"
          AZURE_OPENAI_GPT_DEPLOYMENT="{{ .Data.data.AZURE_OPENAI_GPT_DEPLOYMENT }}"
          FINESSE_BACKEND_AZURE_SEARCH_API_KEY="{{ .Data.data.FINESSE_BACKEND_AZURE_SEARCH_API_KEY }}"
          FINESSE_BACKEND_AZURE_SEARCH_ENDPOINT="{{ .Data.data.FINESSE_BACKEND_AZURE_SEARCH_ENDPOINT }}"
          FINESSE_BACKEND_AZURE_SEARCH_INDEX_NAME="{{ .Data.data.FINESSE_BACKEND_AZURE_SEARCH_INDEX_NAME }}"
          FINESSE_BACKEND_GITHUB_STATIC_FILE_URL="{{ .Data.data.FINESSE_BACKEND_GITHUB_STATIC_FILE_URL }}"
          FINESSE_BACKEND_STATIC_FILE_URL="{{ .Data.data.FINESSE_BACKEND_STATIC_FILE_URL }}"
          FINESSE_BACKEND_DEBUG_MODE="{{ .Data.data.FINESSE_BACKEND_DEBUG_MODE }}"
          FINESSE_WEIGHTS="{{ .Data.data.FINESSE_WEIGHTS }}"
          LOUIS_DSN="{{ .Data.data.LOUIS_DSN }}"
          LOUIS_SCHEMA="{{ .Data.data.LOUIS_SCHEMA }}"
          OPENAI_API_ENGINE="{{ .Data.data.OPENAI_API_ENGINE }}"
          OPENAI_API_KEY="{{ .Data.data.OPENAI_API_KEY }}"
          OPENAI_API_VERSION="{{ .Data.data.OPENAI_API_VERSION }}"
          OPENAI_ENDPOINT="{{ .Data.data.OPENAI_ENDPOINT }}"
          {{- end }}
    spec:
      serviceAccountName: secrets-reader
      containers:
      - name: finesse-backend
        image: ghcr.io/ai-cfia/finesse-backend:main
        imagePullPolicy: Always
        command: ["/bin/sh", "-c"]
        args:
        - >
          cp /vault/secrets/.env . &&
          gunicorn --bind :8080 --workers 1 --threads 8 --timeout 0 --forwarded-allow-ips "*" app:app
        ports:
        - containerPort: 8080
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 10

---
apiVersion: v1
kind: Service
metadata:
  name: finesse-backend-svc
  namespace: finesse
spec:
  clusterIP: None
  selector:
    app: finesse-backend
  ports:
    - protocol: TCP
      port: 8080
